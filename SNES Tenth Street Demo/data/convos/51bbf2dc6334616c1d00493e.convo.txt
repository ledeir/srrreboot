idRef {
  id: "51bbf2dc6334616c1d00493e"
}
ui_name: "TS_GR_Hamfist"
nodes {
  idRef {
    id: "51bc00216334616c1d004ad3"
  }
  index: 0
  text: "Hamfist don\'t like you already! You\'d best have good nuyen if you want to hire a decker like me!\n"
  branches {
    responseText: "Talk"
    nextNodeIndex: 1
  }
  branches {
    responseText: "Leave"
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "51b55c8563346120190048b5"
  }
}
nodes {
  idRef {
    id: "51bc00476334616c1d004ad7"
  }
  index: 1
  text: "You think I\'m dumb! Done a hundred runs and I haven\'t lost one neuron yet!\n"
  branches {
    responseText: "Grinder?"
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Story Variable (bool)"
            args {
              string_value: "51a9844d633461e82400002a"
            }
            args {
              string_value: "KW_Grinder"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 2
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "51c5e80b633461a80b0045ae"
    }
  }
  branches {
    responseText: "Hiring?"
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51a9844d633461e82400002a"
            }
            args {
              string_value: "SR_Fights_Hamfist"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 5
            }
          }
        }
        args {
          int_value: 0
        }
      }
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Story Variable (string)"
            args {
            }
            args {
              string_value: "SpawnPoint"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          string_value: "TS_OB_GR_DOOR"
        }
      }
    }
    nextNodeIndex: 3
    hideIfUnavailable: true
  }
  branches {
    responseText: "Shadowrunners?"
    nextNodeIndex: 8
  }
  branches {
    responseText: "Ghouls?"
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Story Variable (bool)"
            args {
              string_value: "51a9844d633461e82400002a"
            }
            args {
              string_value: "KW_Ghouls"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 9
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "51c5e8e4633461a80b0045af"
    }
  }
  branches {
    responseText: "Glutman?"
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Story Variable (bool)"
            args {
              string_value: "51a9844d633461e82400002a"
            }
            args {
              string_value: "KW_Glutman"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 10
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "51bc07396334616c1d004c59"
    }
  }
  branches {
    responseText: "Drake?"
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Story Variable (bool)"
            args {
              string_value: "51a9844d633461e82400002a"
            }
            args {
              string_value: "KW_Drake"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 11
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "51bc07406334616c1d004c5a"
    }
  }
  branches {
    responseText: "Upgrade Armor"
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51a9844d633461e82400002a"
            }
            args {
              string_value: "SR_Fights_Hamfist"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 2
            }
          }
        }
        args {
          int_value: 0
        }
      }
    }
    nextNodeIndex: 12
    hideIfUnavailable: true
  }
  branches {
    responseText: "Fire"
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51a9844d633461e82400002a"
            }
            args {
              string_value: "SR_Fights_Hamfist"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 2
            }
          }
        }
        args {
          int_value: 0
        }
      }
    }
    nextNodeIndex: 17
    hideIfUnavailable: true
  }
  branches {
    responseText: "Wait Here"
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Story Variable (bool)"
            args {
              string_value: "51a9844d633461e82400002a"
            }
            args {
              string_value: "WAIT_HAMFIST"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51a9844d633461e82400002a"
            }
            args {
              string_value: "SR_Fights_Hamfist"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 2
            }
          }
        }
        args {
          int_value: 0
        }
      }
    }
    nextNodeIndex: 19
    hideIfUnavailable: true
  }
  branches {
    responseText: "Stop Waiting"
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Story Variable (bool)"
            args {
              string_value: "51a9844d633461e82400002a"
            }
            args {
              string_value: "WAIT_HAMFIST"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 20
    hideIfUnavailable: true
  }
  branches {
    responseText: "Leave"
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "51b55c8563346120190048b5"
  }
}
nodes {
  idRef {
    id: "51bc007f6334616c1d004ae2"
  }
  index: 2
  text: "You mean the scalper? He\'s selling those Maria Mercurial tickets. Too bad I can\'t afford one.\n"
  branches {
    responseText: ""
    nextNodeIndex: 1
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51bc00816334616c1d004ae4"
  }
  index: 3
  text: "$(scene.HamfistCost) nuyen and Hamfist chop up cyberspace real good!\n"
  branches {
    responseText: "{{GM}}$(scene.HamfistCost) Nuyen{{/GM}} Yes"
    conditions {
      ops {
        functionName: "Evaluate Nuyen"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "HamfistCost"
            }
          }
        }
      }
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51a9844d633461e82400002a"
            }
            args {
              string_value: "SR_TeamSize"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 3
        }
      }
    }
    nextNodeIndex: 4
    hideIfUnavailable: true
  }
  branches {
    responseText: "{{GM}}$(scene.HamfistCost) Nuyen{{/GM}} Yes"
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51a9844d633461e82400002a"
            }
            args {
              string_value: "SR_TeamSize"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 4
            }
          }
        }
        args {
          int_value: 3
        }
      }
      ops {
        functionName: "Evaluate Nuyen"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "HamfistCost"
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "HamfistCost"
            }
          }
        }
      }
    }
    nextNodeIndex: 5
    hideIfUnavailable: true
  }
  branches {
    responseText: "{{GM}}100 Nuyen{{/GM}} Be on call"
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Story Variable (bool)"
            args {
              string_value: "51a9844d633461e82400002a"
            }
            args {
              string_value: "SR_PH_Hamfist"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Evaluate Nuyen"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          int_value: 100
        }
      }
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "TS11_CredStick"
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 100
        }
      }
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51a9844d633461e82400002a"
            }
            args {
              string_value: "SR_Renew_Hamfist"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "HamfistCost"
            }
          }
        }
      }
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51a9844d633461e82400002a"
            }
            args {
              string_value: "SR_OnCall_Hamfist"
            }
          }
        }
        args {
          call_value {
            functionName: "Arithmetic (int)"
            args {
              call_value {
                functionName: "Get Variable (int)"
                args {
                  string_value: "HamfistCost"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "Arithmetic Ops"
                }
                args {
                  int_value: 3
                }
              }
            }
            args {
              int_value: 3
            }
          }
        }
      }
    }
    nextNodeIndex: 6
    hideIfUnavailable: true
  }
  branches {
    responseText: "No"
    nextNodeIndex: 7
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51cfb2c5633461ac1e00489a"
  }
  index: 4
  text: "If you have a few less runners, I may consider going on a run."
  branches {
    responseText: ""
    nextNodeIndex: 1
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51bc01d56334616c1d004b27"
  }
  index: 5
  text: "Okay budster, let\'s hit it!\n{{GM}}You can click on your character to talk to hired runners.{{/GM}}"
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51a9844d633461e82400002a"
          }
          args {
            string_value: "SR_Fights_Hamfist"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "HamfistDuration"
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51a9844d633461e82400002a"
          }
          args {
            string_value: "SR_Renew_Hamfist"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "HamfistCost"
          }
        }
      }
    }
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51a9844d633461e82400002a"
          }
          args {
            string_value: "SR_TeamSize"
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Kill Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "5893ffbd616131f846001c0e"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DeathMethod"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "590f7394616131bc1f001cee"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "51cfb0c8633461ac1e004868"
  }
  index: 6
  text: "Okay budster, you know where to find me."
  branches {
    responseText: ""
    nextNodeIndex: 1
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "51a9844d633461e82400002a"
          }
          args {
            string_value: "SR_PH_Hamfist"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "51bc01d76334616c1d004b29"
  }
  index: 7
  text: "Your guns are no match for mine. You\'ll regret it..."
  branches {
    responseText: ""
    nextNodeIndex: 1
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "51b55c8563346120190048b5"
  }
}
nodes {
  idRef {
    id: "51bc00836334616c1d004ae6"
  }
  index: 8
  text: "If you need tech, I can burn any Ice there is. If you need magic, the Jamaican cast magic for you."
  branches {
    responseText: ""
    nextNodeIndex: 1
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "51b55c8563346120190048b5"
  }
}
nodes {
  idRef {
    id: "51bc00856334616c1d004ae8"
  }
  index: 9
  text: "Ghouls? Never run into any, but I reckon I can handle them.\n"
  branches {
    responseText: ""
    nextNodeIndex: 1
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "51b55c8563346120190048b5"
  }
}
nodes {
  idRef {
    id: "51bc00876334616c1d004aea"
  }
  index: 10
  text: "You can get into trouble working for him... but he\'s also the only one that can help you out.\n"
  branches {
    responseText: ""
    nextNodeIndex: 1
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "51b55c8563346120190048b5"
  }
}
nodes {
  idRef {
    id: "51bc008a6334616c1d004aec"
  }
  index: 11
  text: "Drake? I\'ve run through his shadows and come out the other side. I can do it again!"
  branches {
    responseText: ""
    nextNodeIndex: 1
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "51b55c8563346120190048b5"
  }
}
nodes {
  idRef {
    id: "6518f5f4616131542e002543"
  }
  index: 12
  text: "{{GM}}You can buy Hamfist better armor{{/GM}}"
  branches {
    responseText: "Equip Black Hat Outfit - 300 Nuyen\nGrants Armor 2 and Intelligence +1"
    conditions {
      ops {
        functionName: "AND"
        args {
          call_value {
            functionName: "Compare Actor Attribute"
            args {
              call_value {
                functionName: "Triggering Target Actor"
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "BaseOrCurrent"
                }
                args {
                  int_value: 1
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "ActorAttributes"
                }
                args {
                  int_value: 10
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "Comparison Ops"
                }
                args {
                  int_value: 4
                }
              }
            }
            args {
              int_value: 2
            }
          }
        }
        args {
          call_value {
            functionName: "Evaluate Nuyen"
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "Comparison Ops"
                }
                args {
                  int_value: 3
                }
              }
            }
            args {
              int_value: 300
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 300
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "Player_DeckerFedora"
            }
          }
        }
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "Hamfist"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 0
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Select Item on Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "Player_DeckerFedora"
            }
          }
        }
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "Hamfist"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 0
                }
              }
            }
          }
        }
      }
    }
    nextNodeIndex: 13
  }
  branches {
    responseText: "Equip The Tourist Look - 500 Nuyen\nGrants Armor 3 and Intelligence +1"
    conditions {
      ops {
        functionName: "AND"
        args {
          call_value {
            functionName: "Compare Actor Attribute"
            args {
              call_value {
                functionName: "Triggering Target Actor"
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "BaseOrCurrent"
                }
                args {
                  int_value: 1
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "ActorAttributes"
                }
                args {
                  int_value: 10
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "Comparison Ops"
                }
                args {
                  int_value: 4
                }
              }
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          call_value {
            functionName: "Evaluate Nuyen"
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "Comparison Ops"
                }
                args {
                  int_value: 3
                }
              }
            }
            args {
              int_value: 500
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 500
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "Player_RiggerHawaiianShirt"
            }
          }
        }
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "Hamfist"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 0
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Select Item on Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "Player_RiggerHawaiianShirt"
            }
          }
        }
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "Hamfist"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 0
                }
              }
            }
          }
        }
      }
    }
    nextNodeIndex: 14
  }
  branches {
    responseText: "Equip Slick Decker Outfit - 750 Nuyen\nGrants Armor 4, Intelligence +1 and Decking +1"
    conditions {
      ops {
        functionName: "AND"
        args {
          call_value {
            functionName: "Compare Actor Attribute"
            args {
              call_value {
                functionName: "Triggering Target Actor"
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "BaseOrCurrent"
                }
                args {
                  int_value: 1
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "ActorAttributes"
                }
                args {
                  int_value: 10
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "Comparison Ops"
                }
                args {
                  int_value: 4
                }
              }
            }
            args {
              int_value: 4
            }
          }
        }
        args {
          call_value {
            functionName: "Evaluate Nuyen"
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "Comparison Ops"
                }
                args {
                  int_value: 3
                }
              }
            }
            args {
              int_value: 750
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 750
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "Player_DeckerFab"
            }
          }
        }
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "Hamfist"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 0
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Select Item on Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "Player_DeckerFab"
            }
          }
        }
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "Hamfist"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 0
                }
              }
            }
          }
        }
      }
    }
    nextNodeIndex: 15
  }
  branches {
    responseText: "Equip Agent Provocateur Outfit - 1000 Nuyen\nGrants Armor 6, Intelligence +1 and ESP Control +1"
    conditions {
      ops {
        functionName: "AND"
        args {
          call_value {
            functionName: "Compare Actor Attribute"
            args {
              call_value {
                functionName: "Triggering Target Actor"
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "BaseOrCurrent"
                }
                args {
                  int_value: 1
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "ActorAttributes"
                }
                args {
                  int_value: 10
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "Comparison Ops"
                }
                args {
                  int_value: 4
                }
              }
            }
            args {
              int_value: 6
            }
          }
        }
        args {
          call_value {
            functionName: "Evaluate Nuyen"
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "Comparison Ops"
                }
                args {
                  int_value: 3
                }
              }
            }
            args {
              int_value: 1000
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 1000
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "Berlin_Player_Outfit_Tech3Deck"
            }
          }
        }
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "Hamfist"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 0
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Select Item on Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "Berlin_Player_Outfit_Tech3Deck"
            }
          }
        }
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "Hamfist"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 0
                }
              }
            }
          }
        }
      }
    }
    nextNodeIndex: 16
  }
  branches {
    responseText: "Never mind, your gear is good for now."
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "651a2df16161313c1f007efe"
  }
  index: 13
  text: "New Armor Equipped."
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "651a2df16161313c1f007efe"
  }
  index: 14
  text: "New Armor Equipped."
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "651a2df16161313c1f007efe"
  }
  index: 15
  text: "New Armor Equipped."
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "651a2df16161313c1f007efe"
  }
  index: 16
  text: "New Armor Equipped."
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "591bb38c6161312c2a003224"
  }
  index: 17
  text: "Do you wish to fire Hamfist?"
  branches {
    responseText: "Yes"
    nextNodeIndex: 18
  }
  branches {
    responseText: "No"
    nextNodeIndex: 1
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "591bb3d46161312c2a003253"
  }
  index: 18
  text: "Your guns are no match for mine. You\'ll regret it..."
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Change Actor Team"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Tag From String"
              args {
                string_value: "Hamfist"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Kill Actor"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Tag From String"
              args {
                string_value: "Hamfist"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DeathMethod"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51a9844d633461e82400002a"
          }
          args {
            string_value: "SR_Fights_Hamfist"
          }
        }
      }
      args {
        int_value: -1
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "REDUCE_TEAM"
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59b0e257616131b427003fd1"
  }
  index: 19
  text: "Try not to die without me!\n{{GM}}You can click on your character to tell Hamfist to stop waiting{{/GM}}"
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "51a9844d633461e82400002a"
          }
          args {
            string_value: "WAIT_HAMFIST"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Change Actor Team"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Tag From String"
              args {
                string_value: "Hamfist"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Change Actor Control"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Tag From String"
              args {
                string_value: "Hamfist"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "PlayerOrAI"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59b0e295616131b427003fd3"
  }
  index: 20
  text: "Finally budster, lets hit it!"
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "51a9844d633461e82400002a"
          }
          args {
            string_value: "WAIT_HAMFIST"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Change Actor Team"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Tag From String"
              args {
                string_value: "Hamfist"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Change Actor Control"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Tag From String"
              args {
                string_value: "Hamfist"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "PlayerOrAI"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Teleport Actor near Actor"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Tag From String"
              args {
                string_value: "Hamfist"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        int_value: 2
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
}
roots {
  responseText: "You talk to the Orc"
  nextNodeIndex: 0
}
