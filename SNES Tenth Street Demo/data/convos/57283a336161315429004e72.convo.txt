idRef {
  id: "57283a336161315429004e72"
}
ui_name: "AN_SECRET_LAB_VICTORY"
nodes {
  idRef {
    id: "57283a496161315429004e79"
  }
  index: 0
  text: "The dying cries of the AI echo through your head and the machinery starts to shake and smoke.\nYou need to get out, and get out FAST!"
  branches {
    responseText: "After slaughtering security downstairs the roof is the only choice!\n{{GM}}WARNING: BAD END{{/GM}}"
    conditions {
      ops {
        functionName: "AND"
        args {
          call_value {
            functionName: "Comparison (bool)"
            args {
              call_value {
                functionName: "Get Story Variable (bool)"
                args {
                  string_value: "51a9844d633461e82400002a"
                }
                args {
                  string_value: "AN_AKIMI_ALLY"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "IsOrIsNot"
                }
                args {
                  int_value: 1
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "bool"
                }
                args {
                  int_value: 0
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Comparison (bool)"
            args {
              call_value {
                functionName: "Get Story Variable (bool)"
                args {
                  string_value: "51a9844d633461e82400002a"
                }
                args {
                  string_value: "AN_HUMAN_ENEMY"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "IsOrIsNot"
                }
                args {
                  int_value: 1
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "bool"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Story Variable (string)"
            args {
              string_value: "51a9844d633461e82400002a"
            }
            args {
              string_value: "SpawnPoint"
            }
          }
        }
        args {
          string_value: "ROOF_NOESCAPE"
        }
      }
      ops {
        functionName: "Open Scene"
        args {
          call_value {
            functionName: "Get Map Item (Scene)"
            args {
              string_value: "End_CutScenes"
            }
          }
        }
      }
    }
    nextNodeIndex: -1
    hideIfUnavailable: true
    comment: "Akimi False / Enemy True"
  }
  branches {
    responseText: "Get to the roof before the building blows!"
    conditions {
      ops {
        functionName: "AND"
        args {
          call_value {
            functionName: "Comparison (int)"
            args {
              call_value {
                functionName: "Get Story Variable (int)"
                args {
                  string_value: "51a9844d633461e82400002a"
                }
                args {
                  string_value: "EndCreditKarma"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "Comparison Ops"
                }
                args {
                  int_value: 2
                }
              }
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Comparison (bool)"
            args {
              call_value {
                functionName: "Get Story Variable (bool)"
                args {
                  string_value: "51a9844d633461e82400002a"
                }
                args {
                  string_value: "AN_HUMAN_ENEMY"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "IsOrIsNot"
                }
                args {
                  int_value: 1
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "bool"
                }
                args {
                  int_value: 0
                }
              }
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Story Variable (string)"
            args {
              string_value: "51a9844d633461e82400002a"
            }
            args {
              string_value: "SpawnPoint"
            }
          }
        }
        args {
          string_value: "ROOF_ESCAPE"
        }
      }
      ops {
        functionName: "Open Scene"
        args {
          call_value {
            functionName: "Get Map Item (Scene)"
            args {
              string_value: "End_CutScenes"
            }
          }
        }
      }
    }
    nextNodeIndex: -1
    hideIfUnavailable: true
    comment: "Karma + / Enemy False"
  }
  branches {
    responseText: "Hot air rises! Take the stairs!\n{{GM}}This option will be removed. Please let us know if there are no other options visible{{/GM}}"
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Story Variable (string)"
            args {
              string_value: "51a9844d633461e82400002a"
            }
            args {
              string_value: "SpawnPoint"
            }
          }
        }
        args {
          string_value: "BUILDING_ESCAPE"
        }
      }
      ops {
        functionName: "Open Scene"
        args {
          call_value {
            functionName: "Get Map Item (Scene)"
            args {
              string_value: "End_CutScenes"
            }
          }
        }
      }
    }
    nextNodeIndex: -1
    hideIfUnavailable: true
    comment: "Akimi True / Enemy False -- REMOVED"
  }
  branches {
    responseText: "There might be people left inside! Take the stairs!"
    conditions {
      ops {
        functionName: "AND"
        args {
          call_value {
            functionName: "Comparison (bool)"
            args {
              call_value {
                functionName: "Get Story Variable (bool)"
                args {
                  string_value: "51a9844d633461e82400002a"
                }
                args {
                  string_value: "AN_AKIMI_ALLY"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "IsOrIsNot"
                }
                args {
                  int_value: 1
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "bool"
                }
                args {
                  int_value: 0
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Comparison (bool)"
            args {
              call_value {
                functionName: "Get Story Variable (bool)"
                args {
                  string_value: "51a9844d633461e82400002a"
                }
                args {
                  string_value: "AN_HUMAN_ENEMY"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "IsOrIsNot"
                }
                args {
                  int_value: 1
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "bool"
                }
                args {
                  int_value: 0
                }
              }
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Story Variable (string)"
            args {
              string_value: "51a9844d633461e82400002a"
            }
            args {
              string_value: "SpawnPoint"
            }
          }
        }
        args {
          string_value: "BUILDING_ESCAPE"
        }
      }
      ops {
        functionName: "Open Scene"
        args {
          call_value {
            functionName: "Get Map Item (Scene)"
            args {
              string_value: "End_CutScenes"
            }
          }
        }
      }
    }
    nextNodeIndex: -1
    hideIfUnavailable: true
    comment: "Akimi False / Enemy False"
  }
  branches {
    responseText: "Get to the roof before the building blows!"
    conditions {
      ops {
        functionName: "AND"
        args {
          call_value {
            functionName: "Comparison (bool)"
            args {
              call_value {
                functionName: "Get Story Variable (bool)"
                args {
                  string_value: "51a9844d633461e82400002a"
                }
                args {
                  string_value: "AN_AKIMI_ALLY"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "IsOrIsNot"
                }
                args {
                  int_value: 1
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "bool"
                }
                args {
                  int_value: 0
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Comparison (bool)"
            args {
              call_value {
                functionName: "Get Story Variable (bool)"
                args {
                  string_value: "51a9844d633461e82400002a"
                }
                args {
                  string_value: "AN_HUMAN_ENEMY"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "IsOrIsNot"
                }
                args {
                  int_value: 1
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "bool"
                }
                args {
                  int_value: 0
                }
              }
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Story Variable (string)"
            args {
              string_value: "51a9844d633461e82400002a"
            }
            args {
              string_value: "SpawnPoint"
            }
          }
        }
        args {
          string_value: "ROOF_ESCAPE"
        }
      }
      ops {
        functionName: "Open Scene"
        args {
          call_value {
            functionName: "Get Map Item (Scene)"
            args {
              string_value: "End_CutScenes"
            }
          }
        }
      }
    }
    nextNodeIndex: -1
    hideIfUnavailable: true
    comment: "Akimi False / Enemy False"
  }
  branches {
    responseText: "After slaughtering security downstairs the roof is the only choice!"
    conditions {
      ops {
        functionName: "AND"
        args {
          call_value {
            functionName: "Comparison (bool)"
            args {
              call_value {
                functionName: "Get Story Variable (bool)"
                args {
                  string_value: "51a9844d633461e82400002a"
                }
                args {
                  string_value: "AN_AKIMI_ALLY"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "IsOrIsNot"
                }
                args {
                  int_value: 1
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "bool"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Comparison (bool)"
            args {
              call_value {
                functionName: "Get Story Variable (bool)"
                args {
                  string_value: "51a9844d633461e82400002a"
                }
                args {
                  string_value: "AN_HUMAN_ENEMY"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "IsOrIsNot"
                }
                args {
                  int_value: 1
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "bool"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Story Variable (string)"
            args {
              string_value: "51a9844d633461e82400002a"
            }
            args {
              string_value: "SpawnPoint"
            }
          }
        }
        args {
          string_value: "ROOF_ESCAPE"
        }
      }
      ops {
        functionName: "Open Scene"
        args {
          call_value {
            functionName: "Get Map Item (Scene)"
            args {
              string_value: "End_CutScenes"
            }
          }
        }
      }
    }
    nextNodeIndex: -1
    hideIfUnavailable: true
    comment: "Akimi True / Enemy True"
  }
  nodeType: ConversationNodeType_Simple
}
roots {
  nextNodeIndex: 0
}
