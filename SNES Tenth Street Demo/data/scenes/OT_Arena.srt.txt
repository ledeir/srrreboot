triggers {
  name: "--== SCENE SETUP ==--"
  events {
  }
  conditions {
  }
  actions {
  }
  isActive: false
  idRef {
    id: "599c7f656631369815004881"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "OnFightLoad"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "End Current Team Round"
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "eModifyCover"
          }
        }
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "eSpawnFighter"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "599c762d663136981500484b"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Fighter.Enable"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "eEnableFighter"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (string)"
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: ""
          }
          args {
            string_value: "SpawnPoint"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "KINGFIGHT"
      }
    }
  }
  actions {
    ops {
      functionName: "Change Actor Team"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Tag From String"
              args {
                call_value {
                  functionName: "Append (string)"
                  args {
                    call_value {
                      functionName: "Convert (int) to (string)"
                      args {
                        call_value {
                          functionName: "Get Story Variable (int)"
                          args {
                            string_value: "51a9844d633461e82400002a"
                          }
                          args {
                            string_value: "ArenaLevel"
                          }
                        }
                      }
                    }
                  }
                  args {
                    string_value: "isFight"
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Seek And Destroy (Team)"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Tag From String"
              args {
                call_value {
                  functionName: "Append (string)"
                  args {
                    call_value {
                      functionName: "Convert (int) to (string)"
                      args {
                        call_value {
                          functionName: "Get Story Variable (int)"
                          args {
                            string_value: "51a9844d633461e82400002a"
                          }
                          args {
                            string_value: "ArenaLevel"
                          }
                        }
                      }
                    }
                  }
                  args {
                    string_value: "isFight"
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Suspend Team\'s Turn"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        int_value: -1
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "eInititive"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "599c7739663136981500484f"
  }
  elseActions {
    ops {
      functionName: "Change Actor Team"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "524257dd633461981600491d"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Seek And Destroy (Team)"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "524257dd633461981600491d"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Suspend Team\'s Turn"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        int_value: -1
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "     Inititive"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "eInititive"
      }
    }
  }
  conditions {
    ops {
      functionName: "Compare Actor Attribute"
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "BaseOrCurrent"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "ActorAttributes"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Actor Attribute"
          args {
            call_value {
              functionName: "Nearest Tagged Actor to Actor"
              args {
                call_value {
                  functionName: "Tag From String"
                  args {
                    call_value {
                      functionName: "Append (string)"
                      args {
                        call_value {
                          functionName: "Convert (int) to (string)"
                          args {
                            call_value {
                              functionName: "Get Story Variable (int)"
                              args {
                                string_value: "51a9844d633461e82400002a"
                              }
                              args {
                                string_value: "ArenaLevel"
                              }
                            }
                          }
                        }
                      }
                      args {
                        string_value: "isFight"
                      }
                    }
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Map Item (Player)"
                  args {
                    int_value: 0
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "BaseOrCurrent"
              }
              args {
                int_value: 1
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "ActorAttributes"
              }
              args {
                int_value: 1
              }
            }
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Apply Attribute Status Effect to Actor"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Tag From String"
              args {
                call_value {
                  functionName: "Append (string)"
                  args {
                    call_value {
                      functionName: "Convert (int) to (string)"
                      args {
                        call_value {
                          functionName: "Get Story Variable (int)"
                          args {
                            string_value: "51a9844d633461e82400002a"
                          }
                          args {
                            string_value: "ArenaLevel"
                          }
                        }
                      }
                    }
                  }
                  args {
                    string_value: "isFight"
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        int_value: -2
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "ActorAttributes"
          }
          args {
            int_value: 9
          }
        }
      }
      args {
        string_value: "Init_Slow"
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "BuffDebuffType"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  isActive: true
  idRef {
    id: "599dbd1d303539281d0065f9"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "OnDeath"
  events {
    ops {
      functionName: "On Actor Death"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (Actor)"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "542b6ca33639353025006e62"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "542b6c7e3639353025006e61"
  }
  elseActions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "Lost"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "     AdvanceCounter"
  events {
  }
  conditions {
    ops {
      functionName: "Comparison (Actor)"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "524257dd633461981600491d"
          }
        }
      }
    }
    ops {
      functionName: "Evaluate Tag for Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Target Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isClone"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51a9844d633461e82400002a"
          }
          args {
            string_value: "ArenaLevel"
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  isActive: true
  idRef {
    id: "542b6ca33639353025006e62"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: " "
  events {
  }
  conditions {
  }
  actions {
  }
  isActive: false
  idRef {
    id: "599c7f33663136981500487d"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "REWARD.GainNuyen"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "ReceiveReward"
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Add Nuyen"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "PrizeMoney"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "51ca7f72633461a018004824"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "REWARD.GainXP"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "ReceiveReward"
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51a9844d633461e82400002a"
          }
          args {
            string_value: "unspentKarma"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Karma"
          }
        }
      }
    }
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51a9844d633461e82400002a"
          }
          args {
            string_value: "unspentXP"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "XP"
          }
        }
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "KarmaCheck"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "51ca80fa633461a018004825"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "REWARD.ConvertXPtoKarma"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "KarmaCheck"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51a9844d633461e82400002a"
          }
          args {
            string_value: "unspentXP"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        int_value: 8
      }
    }
  }
  actions {
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51a9844d633461e82400002a"
          }
          args {
            string_value: "unspentXP"
          }
        }
      }
      args {
        int_value: -8
      }
    }
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51a9844d633461e82400002a"
          }
          args {
            string_value: "unspentKarma"
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  isActive: true
  idRef {
    id: "51ca814c633461a018004826"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: " "
  events {
  }
  conditions {
  }
  actions {
  }
  isActive: false
  idRef {
    id: "599c7f46663136981500487e"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "--==  FIGHT COUNTER SETUP ==--"
  events {
  }
  conditions {
  }
  actions {
  }
  isActive: false
  idRef {
    id: "599c7f46663136981500487f"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "START-0"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "eSpawnFighter"
      }
    }
  }
  conditions {
    ops {
      functionName: "AND"
      args {
        call_value {
          functionName: "Comparison (int)"
          args {
            call_value {
              functionName: "Get Story Variable (int)"
              args {
                string_value: "51a9844d633461e82400002a"
              }
              args {
                string_value: "ArenaLevel"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Comparison Ops"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Comparison (string)"
          args {
            call_value {
              functionName: "Get Story Variable (string)"
              args {
                string_value: ""
              }
              args {
                string_value: "SpawnPoint"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "IsOrIsNot"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            string_value: "KINGFIGHT"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "52392e466334618012001b0f"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Random Point Within Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "5243a18f633461481b0016d9"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 7
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "PrizeMoney"
          }
        }
      }
      args {
        int_value: 150
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "XP"
          }
        }
      }
      args {
        int_value: 6
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Karma"
          }
        }
      }
      args {
        int_value: 2
      }
    }
    ops {
      functionName: "Display Text over Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "599c76ce663136981500484e"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "Fight One - Gang Member"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 5
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "eEnableFighter"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52392d7e6334618012001b0e"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "START-1"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "eSpawnFighter"
      }
    }
  }
  conditions {
    ops {
      functionName: "AND"
      args {
        call_value {
          functionName: "Comparison (int)"
          args {
            call_value {
              functionName: "Get Story Variable (int)"
              args {
                string_value: "51a9844d633461e82400002a"
              }
              args {
                string_value: "ArenaLevel"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Comparison Ops"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Comparison (string)"
          args {
            call_value {
              functionName: "Get Story Variable (string)"
              args {
                string_value: ""
              }
              args {
                string_value: "SpawnPoint"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "IsOrIsNot"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            string_value: "KINGFIGHT"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "52392f2e6334618012001b11"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Random Point Within Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "5243a18f633461481b0016d9"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 7
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "PrizeMoney"
          }
        }
      }
      args {
        int_value: 350
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "XP"
          }
        }
      }
      args {
        int_value: 0
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Karma"
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Display Text over Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "599c76ce663136981500484e"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "Fight Two - Heavy Dude"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 5
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "eEnableFighter"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "523932956334618012001b19"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "START-2"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "eSpawnFighter"
      }
    }
  }
  conditions {
    ops {
      functionName: "AND"
      args {
        call_value {
          functionName: "Comparison (int)"
          args {
            call_value {
              functionName: "Get Story Variable (int)"
              args {
                string_value: "51a9844d633461e82400002a"
              }
              args {
                string_value: "ArenaLevel"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Comparison Ops"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Comparison (string)"
          args {
            call_value {
              functionName: "Get Story Variable (string)"
              args {
                string_value: ""
              }
              args {
                string_value: "SpawnPoint"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "IsOrIsNot"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            string_value: "KINGFIGHT"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "523f9bbc633461a02f003e15"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Random Point Within Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "5243a18f633461481b0016d9"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 7
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "PrizeMoney"
          }
        }
      }
      args {
        int_value: 500
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "XP"
          }
        }
      }
      args {
        int_value: 4
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Karma"
          }
        }
      }
      args {
        int_value: 2
      }
    }
    ops {
      functionName: "Display Text over Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "599c76ce663136981500484e"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "Fight Three - Heavy Dude"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "eEnableFighter"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "523fa585633461a02f003e1c"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "START-3"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "eSpawnFighter"
      }
    }
  }
  conditions {
    ops {
      functionName: "AND"
      args {
        call_value {
          functionName: "Comparison (int)"
          args {
            call_value {
              functionName: "Get Story Variable (int)"
              args {
                string_value: "51a9844d633461e82400002a"
              }
              args {
                string_value: "ArenaLevel"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Comparison Ops"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Comparison (string)"
          args {
            call_value {
              functionName: "Get Story Variable (string)"
              args {
                string_value: ""
              }
              args {
                string_value: "SpawnPoint"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "IsOrIsNot"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            string_value: "KINGFIGHT"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "523f9d64633461a02f003e16"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Random Point Within Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "5243a18f633461481b0016d9"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 7
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "PrizeMoney"
          }
        }
      }
      args {
        int_value: 1000
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "XP"
          }
        }
      }
      args {
        int_value: 4
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Karma"
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Display Text over Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "599c76ce663136981500484e"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "Fight Four - Shaman"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "eEnableFighter"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "523fa5bd633461a02f003e1d"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "START-4"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "eSpawnFighter"
      }
    }
  }
  conditions {
    ops {
      functionName: "AND"
      args {
        call_value {
          functionName: "Comparison (int)"
          args {
            call_value {
              functionName: "Get Story Variable (int)"
              args {
                string_value: "51a9844d633461e82400002a"
              }
              args {
                string_value: "ArenaLevel"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Comparison Ops"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            int_value: 4
          }
        }
      }
      args {
        call_value {
          functionName: "Comparison (string)"
          args {
            call_value {
              functionName: "Get Story Variable (string)"
              args {
                string_value: ""
              }
              args {
                string_value: "SpawnPoint"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "IsOrIsNot"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            string_value: "KINGFIGHT"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "523f9e81633461a02f003e17"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Random Point Within Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "5243a18f633461481b0016d9"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 7
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "PrizeMoney"
          }
        }
      }
      args {
        int_value: 1500
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "XP"
          }
        }
      }
      args {
        int_value: 5
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Karma"
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Display Text over Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "599c76ce663136981500484e"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "Fight Five - Mage"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "eEnableFighter"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "523fa5f9633461a02f003e1e"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "START-5"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "eSpawnFighter"
      }
    }
  }
  conditions {
    ops {
      functionName: "AND"
      args {
        call_value {
          functionName: "Comparison (int)"
          args {
            call_value {
              functionName: "Get Story Variable (int)"
              args {
                string_value: "51a9844d633461e82400002a"
              }
              args {
                string_value: "ArenaLevel"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Comparison Ops"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        call_value {
          functionName: "Comparison (string)"
          args {
            call_value {
              functionName: "Get Story Variable (string)"
              args {
                string_value: ""
              }
              args {
                string_value: "SpawnPoint"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "IsOrIsNot"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            string_value: "KINGFIGHT"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "523f9f07633461a02f003e18"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Random Point Within Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "5243a18f633461481b0016d9"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 7
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "PrizeMoney"
          }
        }
      }
      args {
        int_value: 2000
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "XP"
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Karma"
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Display Text over Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "599c76ce663136981500484e"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "Fight Six - Samurai Warrior"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "eEnableFighter"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "523fa62c633461a02f003e1f"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "START-6"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "eSpawnFighter"
      }
    }
  }
  conditions {
    ops {
      functionName: "AND"
      args {
        call_value {
          functionName: "Comparison (int)"
          args {
            call_value {
              functionName: "Get Story Variable (int)"
              args {
                string_value: "51a9844d633461e82400002a"
              }
              args {
                string_value: "ArenaLevel"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Comparison Ops"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            int_value: 6
          }
        }
      }
      args {
        call_value {
          functionName: "Comparison (string)"
          args {
            call_value {
              functionName: "Get Story Variable (string)"
              args {
                string_value: ""
              }
              args {
                string_value: "SpawnPoint"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "IsOrIsNot"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            string_value: "KINGFIGHT"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "523fa0ca633461a02f003e19"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Random Point Within Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "5243a18f633461481b0016d9"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 7
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "PrizeMoney"
          }
        }
      }
      args {
        int_value: 2500
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "XP"
          }
        }
      }
      args {
        int_value: 2
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Karma"
          }
        }
      }
      args {
        int_value: 3
      }
    }
    ops {
      functionName: "Display Text over Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "599c76ce663136981500484e"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "Fight Seven - Ferocious Orc"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "eEnableFighter"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "523fa65f633461a02f003e20"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "START-7"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "eSpawnFighter"
      }
    }
  }
  conditions {
    ops {
      functionName: "AND"
      args {
        call_value {
          functionName: "Comparison (int)"
          args {
            call_value {
              functionName: "Get Story Variable (int)"
              args {
                string_value: "51a9844d633461e82400002a"
              }
              args {
                string_value: "ArenaLevel"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Comparison Ops"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            int_value: 7
          }
        }
      }
      args {
        call_value {
          functionName: "Comparison (string)"
          args {
            call_value {
              functionName: "Get Story Variable (string)"
              args {
                string_value: ""
              }
              args {
                string_value: "SpawnPoint"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "IsOrIsNot"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            string_value: "KINGFIGHT"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "523fa1f1633461a02f003e1a"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Random Point Within Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "5243a18f633461481b0016d9"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 7
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "PrizeMoney"
          }
        }
      }
      args {
        int_value: 3000
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "XP"
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Karma"
          }
        }
      }
      args {
        int_value: 3
      }
    }
    ops {
      functionName: "Display Text over Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "599c76ce663136981500484e"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "Fight Eight - Gang Leader"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "eEnableFighter"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "523fa696633461a02f003e21"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "START-8"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "eSpawnFighter"
      }
    }
  }
  conditions {
    ops {
      functionName: "AND"
      args {
        call_value {
          functionName: "Comparison (int)"
          args {
            call_value {
              functionName: "Get Story Variable (int)"
              args {
                string_value: "51a9844d633461e82400002a"
              }
              args {
                string_value: "ArenaLevel"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Comparison Ops"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            int_value: 8
          }
        }
      }
      args {
        call_value {
          functionName: "Comparison (string)"
          args {
            call_value {
              functionName: "Get Story Variable (string)"
              args {
                string_value: ""
              }
              args {
                string_value: "SpawnPoint"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "IsOrIsNot"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            string_value: "KINGFIGHT"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "523fa2e9633461a02f003e1b"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Random Point Within Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "5243a18f633461481b0016d9"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 7
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "PrizeMoney"
          }
        }
      }
      args {
        int_value: 3500
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "XP"
          }
        }
      }
      args {
        int_value: 4
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Karma"
          }
        }
      }
      args {
        int_value: 4
      }
    }
    ops {
      functionName: "Display Text over Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "599c76ce663136981500484e"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "Fight Nine - Troll Decker"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "eEnableFighter"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "523fa6c2633461a02f003e22"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "START-9"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "eSpawnFighter"
      }
    }
  }
  conditions {
    ops {
      functionName: "AND"
      args {
        call_value {
          functionName: "Comparison (int)"
          args {
            call_value {
              functionName: "Get Story Variable (int)"
              args {
                string_value: "51a9844d633461e82400002a"
              }
              args {
                string_value: "ArenaLevel"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Comparison Ops"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            int_value: 9
          }
        }
      }
      args {
        call_value {
          functionName: "Comparison (string)"
          args {
            call_value {
              functionName: "Get Story Variable (string)"
              args {
                string_value: ""
              }
              args {
                string_value: "SpawnPoint"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "IsOrIsNot"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            string_value: "KINGFIGHT"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "524397a56334617c1c0016f8"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "53c33230633461c021003e14"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 7
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "PrizeMoney"
          }
        }
      }
      args {
        int_value: 4000
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "XP"
          }
        }
      }
      args {
        int_value: 0
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Karma"
          }
        }
      }
      args {
        int_value: 5
      }
    }
    ops {
      functionName: "Display Text over Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "599c76ce663136981500484e"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "Fight Ten - Magician"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "52439b196334617c1c001700"
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "5243a002633461481b0016d6"
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "542b6c7e3639353025006e61"
          }
        }
      }
    }
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "524397a56334617c1c0016f8"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "The nice thing about me..."
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 8
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Send Event After Delay"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "eArmClones"
          }
        }
      }
      args {
        float_value: 2
      }
    }
  }
  isActive: true
  idRef {
    id: "52439b6d6334617c1c001701"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "     Mage.Clone"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "eArmClones"
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "524397a56334617c1c0016f8"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "Seattle:General/standing_cast_buff_matrix"
          }
        }
      }
    }
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "decker"
          }
          args {
            string_value: "Matrix_SummonESP"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Send Event After Delay"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "eArmClones"
          }
        }
      }
      args {
        float_value: 2.25
      }
    }
    ops {
      functionName: "Trigger: Wait Until Triggered Again"
    }
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "524397a56334617c1c0016f8"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "...Is that there are SO MANY of me!"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 8
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "524398c16334617c1c0016fa"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "599c794c6631369815004855"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 8
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "524399196334617c1c0016fc"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "599c79486631369815004852"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 6
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "524399176334617c1c0016fb"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "599c794b6631369815004854"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "5243991b6334617c1c0016fd"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "599c794a6631369815004853"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Play FX at Point"
      args {
        string_value: "JessicaDummyBuffHitReaction"
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "524398c16334617c1c0016fa"
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Play FX at Point"
      args {
        string_value: "JessicaDummyBuffHitReaction"
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "524399196334617c1c0016fc"
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Play FX at Point"
      args {
        string_value: "JessicaDummyBuffHitReaction"
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "524399176334617c1c0016fb"
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Play FX at Point"
      args {
        string_value: "JessicaDummyBuffHitReaction"
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "5243991b6334617c1c0016fd"
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "eEnableFighter"
          }
        }
      }
    }
    ops {
      functionName: "Apply Attribute Status Effect to Actor"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isClone"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        int_value: -2
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "ActorAttributes"
          }
          args {
            int_value: 9
          }
        }
      }
      args {
        string_value: "Summoned"
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "BuffDebuffType"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  isActive: true
  idRef {
    id: "5aaed6606631360813001201"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "     MageDeath"
  events {
    ops {
      functionName: "On Actor Death"
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Tag for Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Target Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isRealMage"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "MageAlive"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Kill Actor"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isClone"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DeathMethod"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51a9844d633461e82400002a"
          }
          args {
            string_value: "ArenaLevel"
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  isActive: true
  idRef {
    id: "52439b196334617c1c001700"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "     CloneHit"
  events {
    ops {
      functionName: "On Actor Damage"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HPOrAP"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "On Actor Damage"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HPOrAP"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Tag for Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Target Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isClone"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Kill Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Target Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DeathMethod"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5aaecca76631367809005054"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "     CloneScatter"
  events {
    ops {
      functionName: "On Actor Start Turn"
    }
  }
  conditions {
    ops {
      functionName: "AND"
      args {
        call_value {
          functionName: "Evaluate Tag for Actor"
          args {
            call_value {
              functionName: "Specific Actor"
              args {
                call_value {
                  functionName: "Triggering Actor"
                }
              }
              args {
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "HasOrHasNot"
              }
              args {
                int_value: 1
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isClone"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Comparison (int)"
          args {
            call_value {
              functionName: "Get Variable (int)"
              args {
                string_value: "Scatter"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Comparison Ops"
              }
              args {
                int_value: 2
              }
            }
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51a9844d633461e82400002a"
          }
          args {
            string_value: "ArenaLevel"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 9
      }
    }
  }
  actions {
    ops {
      functionName: "Order Actor to Move To (Point)"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Random Point Within Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "5243a18f633461481b0016d9"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Scatter"
          }
        }
      }
      args {
        int_value: -1
      }
    }
    ops {
      functionName: "Order Actor to Hunt And Destroy (Team)"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5243a002633461481b0016d6"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "     EndMageFight"
  events {
    ops {
      functionName: "On Actor Damage"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HPOrAP"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (Actor)"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Compare Actor Attribute"
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "BaseOrCurrent"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "ActorAttributes"
          }
          args {
            int_value: 8
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 4
          }
        }
      }
      args {
        int_value: 10
      }
    }
  }
  actions {
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "You Lose. This fight is over."
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "Lost"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Change Actor Team"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Kill Actor"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isClone"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DeathMethod"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Manual Turn Mode"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "524a32226334610002006df2"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "START-KING"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "eSpawnFighter"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (string)"
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: ""
          }
          args {
            string_value: "SpawnPoint"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "KINGFIGHT"
      }
    }
  }
  actions {
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "524257dd633461981600491d"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "5239312f6334618012001b17"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 7
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "PrizeMoney"
          }
        }
      }
      args {
        int_value: 1500
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "XP"
          }
        }
      }
      args {
        int_value: 7
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Karma"
          }
        }
      }
      args {
        int_value: 3
      }
    }
    ops {
      functionName: "Display Text over Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "599c76ce663136981500484e"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "Fight The King"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "542b6c7e3639353025006e61"
          }
        }
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "eEnableFighter"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "524258c8633461981600491f"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: " "
  events {
  }
  conditions {
  }
  actions {
  }
  isActive: false
  idRef {
    id: "599c7f19663136981500487b"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "--== CORTEX BOMB ==--"
  events {
  }
  conditions {
  }
  actions {
  }
  isActive: false
  idRef {
    id: "599c7f22663136981500487c"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "BombActive"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51a9844d633461e82400002a"
          }
          args {
            string_value: "OT_CortexBomb"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "BOMBCOUNT"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5266069f63346110180071db"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "CortexBomb"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "BOMBCOUNT"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51a9844d633461e82400002a"
          }
          args {
            string_value: "BOMBTIMER"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        int_value: 0
      }
    }
  }
  actions {
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51a9844d633461e82400002a"
          }
          args {
            string_value: "BOMBTIMER"
          }
        }
      }
      args {
        int_value: -10
      }
    }
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "TICK TICK TICK"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Set Screen Label Progress Bar (int)"
      args {
        string_value: "CortexBomb"
      }
      args {
        string_value: "Cortex bomb timer"
      }
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51a9844d633461e82400002a"
          }
          args {
            string_value: "BOMBTIMER"
          }
        }
      }
      args {
        int_value: 1800
      }
    }
    ops {
      functionName: "Send Event After Delay"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "BOMBCOUNT"
          }
        }
      }
      args {
        float_value: 10
      }
    }
  }
  isActive: true
  idRef {
    id: "526600e86334611018006fde"
  }
  elseActions {
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "weapons"
          }
          args {
            string_value: "GrenadeFrag"
          }
        }
      }
      args {
        float_value: 10
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "BOOM! The cortex bomb explodes."
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Kill Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DeathMethod"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: " "
  events {
  }
  conditions {
  }
  actions {
  }
  isActive: false
  idRef {
    id: "599c7639663136981500484c"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "--== ARENA COVER ==--"
  events {
  }
  conditions {
  }
  actions {
  }
  isActive: false
  idRef {
    id: "599c7f6e6631369815004882"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "DeleteObstacles"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "eModifyCover"
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Send Event After Delay"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "eModifyCover"
          }
        }
      }
      args {
        float_value: 0.5
      }
    }
    ops {
      functionName: "Fade Camera Out"
      args {
        float_value: 0.25
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Trigger: Wait Until Triggered Again"
    }
    ops {
      functionName: "Teleport Actor near Point"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        int_value: 0
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "599dbef6303539281d0065fc"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Send Event After Delay"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "eModifyCover"
          }
        }
      }
      args {
        float_value: 0.25
      }
    }
    ops {
      functionName: "Set Prop Visible by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isCover"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        float_value: -1
      }
      args {
        call_value {
          functionName: "Everywhere"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DoesOrDoesNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "SpawnObs"
          }
        }
      }
    }
    ops {
      functionName: "Trigger: Wait Until Triggered Again"
    }
    ops {
      functionName: "Fade Camera In"
      args {
        float_value: 0.25
      }
      args {
        float_value: 0
      }
    }
  }
  isActive: true
  idRef {
    id: "55af1b2f616131181100792b"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "DeleteObs1"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "SpawnObs"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Random (int)"
          args {
            int_value: 0
          }
          args {
            int_value: 10
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        int_value: 7
      }
    }
  }
  actions {
    ops {
      functionName: "Delete Props by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "obs1"
          }
        }
      }
      args {
        float_value: -1
      }
      args {
        call_value {
          functionName: "Everywhere"
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "55af19986161311811007927"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "DeleteObs2"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "SpawnObs"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Random (int)"
          args {
            int_value: 0
          }
          args {
            int_value: 10
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        int_value: 5
      }
    }
  }
  actions {
    ops {
      functionName: "Delete Props by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "obs2"
          }
        }
      }
      args {
        float_value: -1
      }
      args {
        call_value {
          functionName: "Everywhere"
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "55af1a106161311811007928"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "DeleteObs3"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "SpawnObs"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Random (int)"
          args {
            int_value: 0
          }
          args {
            int_value: 10
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        int_value: 5
      }
    }
  }
  actions {
    ops {
      functionName: "Delete Props by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "obs3"
          }
        }
      }
      args {
        float_value: -1
      }
      args {
        call_value {
          functionName: "Everywhere"
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "55af1a1b6161311811007929"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "DeleteObs4"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "SpawnObs"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Random (int)"
          args {
            int_value: 0
          }
          args {
            int_value: 10
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        int_value: 3
      }
    }
  }
  actions {
    ops {
      functionName: "Delete Props by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "obs4"
          }
        }
      }
      args {
        float_value: -1
      }
      args {
        call_value {
          functionName: "Everywhere"
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "55af1a1b616131181100792a"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "LeyLine"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "SpawnObs"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Random (int)"
          args {
            int_value: 1
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Move Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "53c33741633461c021003e17"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Random Point Within Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "5243a18f633461481b0016d9"
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Move Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "599dcb8c303539281d006600"
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "599c806f66313698150048a9"
              }
            }
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "599dc5f0303539281d0065fd"
  }
  elseActions {
    ops {
      functionName: "Move Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "599dcb8c303539281d006600"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Random Point Within Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "5243a18f633461481b0016d9"
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Move Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "53c33741633461c021003e17"
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "599c806f66313698150048a9"
              }
            }
          }
        }
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: " "
  events {
  }
  conditions {
  }
  actions {
  }
  isActive: false
  idRef {
    id: "599c7f656631369815004880"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Player.Killed"
  events {
    ops {
      functionName: "On Actor Damage"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HPOrAP"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "AND"
      args {
        call_value {
          functionName: "Comparison (Actor)"
          args {
            call_value {
              functionName: "Triggering Target Actor"
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "IsOrIsNot"
              }
              args {
                int_value: 1
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Compare Actor Attribute"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "BaseOrCurrent"
              }
              args {
                int_value: 1
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "ActorAttributes"
              }
              args {
                int_value: 8
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Comparison Ops"
              }
              args {
                int_value: 5
              }
            }
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Survive The Arena"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "561f1d78663136d0060012c8"
  }
  elseActions {
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "5a34757c616131e40d005e4c"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "EndFight"
  events {
  }
  conditions {
    ops {
      functionName: "AND"
      args {
        call_value {
          functionName: "Comparison (Actor)"
          args {
            call_value {
              functionName: "Triggering Target Actor"
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "IsOrIsNot"
              }
              args {
                int_value: 1
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Compare Actor Attribute"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "BaseOrCurrent"
              }
              args {
                int_value: 1
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "ActorAttributes"
              }
              args {
                int_value: 8
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Comparison Ops"
              }
              args {
                int_value: 4
              }
            }
          }
          args {
            int_value: 10
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "You Lose. This fight is over."
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "Lost"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to become a Non-Combatant"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 1
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Change Actor Team"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 1
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Manual Turn Mode"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5a34757c616131e40d005e4c"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "FightEnds"
  events {
    ops {
      functionName: "On Freemove Mode Enter"
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Team Survival Percentage"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 0
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Enable/Disable Team\'s Turn"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "5239274e63346180120019e3"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "52392c956334618012001b09"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5239274e63346180120019e3"
          }
        }
      }
    }
    ops {
      functionName: "Start Conversation Between Actors"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "5239276e63346180120019e5"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5239274e63346180120019e3"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5a34773c616131e40d005e4d"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "ConcedeFight"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "52e70b13373361500e006571"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "AND"
      args {
        call_value {
          functionName: "Evaluate Turn Mode"
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "TurnBasedOrFreeMove"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Comparison (Actor)"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "IsOrIsNot"
              }
              args {
                int_value: 1
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "5acee19e6161317c3500759d"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "58b50ae2616131981d003a75"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: ""
  events {
  }
  conditions {
  }
  actions {
  }
  isActive: true
  idRef {
    id: "5b56afad616131f422000572"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "HiredRunnerEnter"
  events {
    ops {
      functionName: "On Curtains Up"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Detain Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 1
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DetainMethod"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Detain Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 2
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DetainMethod"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Detain Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 3
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DetainMethod"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Actor Ignored by AI"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 1
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Actor Ignored by AI"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 2
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Actor Ignored by AI"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 3
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5b500c8f616131fc0f0031f5"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "LeaveArena"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "LeaveArena"
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Detain Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 1
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DetainMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Detain Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 2
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DetainMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Detain Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 3
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DetainMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Set Actor Ignored by AI"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 1
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Set Actor Ignored by AI"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 2
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Set Actor Ignored by AI"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 3
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: "51a9844d633461e82400002a"
          }
          args {
            string_value: "SpawnPoint"
          }
        }
      }
      args {
        string_value: "CY_ARENA"
      }
    }
    ops {
      functionName: "Open Scene"
      args {
        call_value {
          functionName: "Get Map Item (Scene)"
          args {
            string_value: "OT_CARYARDS"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5b161812616131002f004ee6"
  }
  elseActions {
  }
  is_oneshot: false
}
regions {
  name: "camera"
  position {
    x: 16
    y: -24
    width: 17
    height: 18
  }
  enabledAtStart: true
  is_camera_region: true
  idRef {
    id: "5231512e633461f41e000125"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.21960784
    g: 0.21960784
    b: 0.21960784
    a: 1
  }
  ambient_light_color {
    r: 0.40784314
    g: 0.19607843
    b: 0
    a: 1
  }
  ambience_template: "barrens-night"
  combat_music: ""
  default_music: "Seattle-Set5-Combat"
  loop_combat_music: true
  loop_default_music: true
  no_fow_in_region: false
}
regions {
  name: "ownerIN"
  position {
    x: 31
    y: -18
    width: 1
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "52392c956334618012001b09"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "playerTALK"
  position {
    x: 29
    y: -18
    width: 1
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "52392cfe6334618012001b0d"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "enemyStart"
  position {
    x: 22
    y: -12
    width: 2
    height: 2
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "5239312f6334618012001b17"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "Scatter"
  position {
    x: 28
    y: -20
    width: -8
    height: 8
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "5243a18f633461481b0016d9"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "mageStart"
  position {
    x: 24
    y: -11
    width: -1
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "53c33230633461c021003e14"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "cloneSpawn"
  position {
    x: 25
    y: -12
    width: -3
    height: 3
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "53c3323d633461c021003e15"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "cHoldingPen"
  position {
    x: 24
    y: -52
    width: 3
    height: 12
  }
  enabledAtStart: true
  is_camera_region: true
  idRef {
    id: "599c74af663136981500484a"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
characters {
  name: "system_spawner_playerSpawner"
  gridPoint {
    x: 23
    y: 0
    z: -20
  }
  orientation: ORIENTATION_E
  idRef {
    id: "52315121633461f41e000124"
  }
  lod: 0
  character_instance {
    character_mod {
      archetypeName: "Player"
    }
    team_id: "Shadowrunners"
    char_name: "New Actor"
    enabled_at_start: true
    pc_spawn_number: 0
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 24
    y: 0
    z: -41
  }
  orientation: ORIENTATION_S
  displayName: "ArenaOwner"
  idRef {
    id: "5239274e63346180120019e3"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 4
    dummyInteraciton {
    }
    interaction_info_text: ""
  }
  lod: 0
  character_instance {
    prefab_name: "Story/GrizzledVeteran"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        hp: 0
        ap: 0
        morale: 24
        awareness: 24
        protect_tether_range: 5
        move_speed: 6
      }
      skills {
      }
      specializations {
      }
      archetypeName: "Non-Combatant"
    }
    team_id: "Civilians"
    char_name: "Arena Owner"
    pc_spawn_number: -1
    portrait {
      filename: "backer_humanmale_nikpoenisch"
    }
    karma: 6
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 24
    y: 0
    z: -52
  }
  orientation: ORIENTATION_W
  GeneralTags: "isFight0"
  displayName: "Fight1"
  idRef {
    id: "52392e466334618012001b0f"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Gangers/HumanMaleGanger"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 2
        quickness: 2
        strength: 3
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        hp: 0
        ap: 0
        morale: 24
        discipline: 0
        awareness: 24
        perception: 0
        authority: 0
        protect_tether_range: 5
        move_speed: 2
        is_fearless: 1
      }
      skills {
        close_combat: 3
      }
      specializations {
        edged: 3
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      attackRandom: AttackStyle_BestOnly
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "Sword 1 Machete"
    }
    team_id: "Civilians"
    char_name: "Gang Member"
    GeneralTags: "isFight0"
    enabled_at_start: true
    pc_spawn_number: -1
    portrait {
      filename: "pc_humanmale_01b_roadwarrior"
    }
    karma: 37
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 24
    y: 0
    z: -51
  }
  orientation: ORIENTATION_W
  GeneralTags: "isFight1"
  displayName: "Fight2"
  idRef {
    id: "52392f2e6334618012001b11"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Gangers/HumanMaleGanger"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 2
        quickness: 3
        strength: 1
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 2
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        is_fearless: 1
      }
      skills {
        ranged_combat: 3
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 2
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 3
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeCautious
      attackRandom: AttackStyle_BestOnly
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "SamuraiPunk"
    }
    equipment {
      prefab_name: "Pi 1 Ceska Black Scorpion"
    }
    team_id: "Civilians"
    char_name: "Heavy Dude"
    GeneralTags: "isFight1"
    enabled_at_start: true
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "backer_humanmale_alexeykruglyakov"
    }
    karma: 37
    hiring_cost_override: 50
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 24
    y: 0
    z: -50
  }
  orientation: ORIENTATION_W
  GeneralTags: "isFight2"
  displayName: "Fight3"
  idRef {
    id: "523f9bbc633461a02f003e15"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Gangers/HumanMaleGanger"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 2
        quickness: 3
        strength: 1
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 4
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        is_fearless: 1
      }
      skills {
        ranged_combat: 4
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 3
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 3
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeCautious
      attackRandom: AttackStyle_BestOnly
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "SamuraiPunk"
    }
    equipment {
      prefab_name: "Pi 1 Ceska Black Scorpion"
    }
    team_id: "Civilians"
    char_name: "Heavy Dude"
    GeneralTags: "isFight2"
    enabled_at_start: true
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "backer_humanmale_alexeykruglyakov"
    }
    karma: 44
    hiring_cost_override: 50
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 24
    y: 0
    z: -49
  }
  orientation: ORIENTATION_W
  GeneralTags: "isFight3"
  displayName: "Fight4"
  idRef {
    id: "523f9d64633461a02f003e16"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Core/ElfMale"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 2
        quickness: 4
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 4
        essence: 0
        magic: 5
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 24
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        is_fearless: 1
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 4
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 1
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      attackRandom: AttackStyle_RandomAll
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "MageSlick"
    }
    equipment {
      prefab_name: "Berlin_Spell Toxic Bolt 1"
    }
    equipment {
      prefab_name: "Berlin_Spell Nerve Bolt 1"
    }
    team_id: "Civilians"
    char_name: "Shaman"
    GeneralTags: "isFight3"
    enabled_at_start: true
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "backer_elfmale_rthomasallwin"
    }
    karma: 50
    hiring_cost_override: 50
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 24
    y: 0
    z: -48
  }
  orientation: ORIENTATION_W
  GeneralTags: "isFight4"
  displayName: "Fight5"
  idRef {
    id: "523f9e81633461a02f003e17"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Core/ElfMale"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 3
        quickness: 4
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 4
        essence: 0
        magic: 5
        hp: 0
        ap: 0
        armor: 2
        force: 0
        morale: 0
        discipline: 0
        awareness: 24
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        is_fearless: 1
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 5
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 3
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeCautious
      attackRandom: AttackStyle_CycleAll
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "Spell Manabolt 1"
    }
    equipment {
      prefab_name: "Player_MageStarter"
    }
    equipment {
      prefab_name: "Spell Stunbolt 1"
    }
    equipment {
      prefab_name: "Spell Powerbolt 2"
    }
    equipment {
      prefab_name: "Berlin_Spell Heal Wound"
    }
    team_id: "Civilians"
    char_name: "Mage"
    GeneralTags: "isFight4"
    enabled_at_start: true
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "backer_elfmale_rthomasallwin"
    }
    karma: 64
    hiring_cost_override: 50
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 26
    y: 0
    z: -52
  }
  orientation: ORIENTATION_W
  GeneralTags: "isFight5"
  displayName: "Fight6"
  idRef {
    id: "523f9f07633461a02f003e18"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Standard/HumanMaleStreetSamurai"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 4
        quickness: 5
        strength: 2
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        hp: 0
        ap: 0
        armor: 3
        morale: 24
        discipline: 0
        awareness: 24
        perception: 0
        authority: 0
        protect_tether_range: 5
        move_speed: 6
        is_fearless: 1
      }
      skills {
        ranged_combat: 3
        close_combat: 4
      }
      specializations {
        smg: 2
        edged: 3
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "SamuraiPunk"
    }
    equipment {
      prefab_name: "SMG 1 Uzi III"
    }
    equipment {
      prefab_name: "Sword 1 Machete"
    }
    team_id: "Civilians"
    char_name: "Samurai Warrior"
    GeneralTags: "isFight5"
    enabled_at_start: true
    pc_spawn_number: -1
    portrait {
      filename: "backerpc_humanmale_davidfry_joshuamorgan"
    }
    karma: 70
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 26
    y: 0
    z: -51
  }
  orientation: ORIENTATION_W
  GeneralTags: "isFight6"
  displayName: "Fight7"
  idRef {
    id: "523fa0ca633461a02f003e19"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Gangers/OrkMaleGanger_Cutter"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 5
        quickness: 3
        strength: 4
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        hp: 0
        ap: 0
        armor: 2
        morale: 24
        discipline: 0
        awareness: 24
        perception: 0
        authority: 0
        protect_tether_range: 5
        move_speed: 0
        is_fearless: 1
      }
      skills {
        ranged_combat: 0
        close_combat: 4
        dodge: 1
      }
      specializations {
        pistol: 0
        smg: 0
        edged: 4
        unarmed: 4
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeCautious
      attackRandom: AttackStyle_BestOnly
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "SamuraiPunk"
    }
    equipment {
      prefab_name: "Berlin_Fist 1 Spiked Fist"
    }
    equipment {
      prefab_name: "Sword 2 Axe"
    }
    team_id: "Civilians"
    char_name: "Ferocious Ork"
    GeneralTags: "isFight6"
    enabled_at_start: true
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "pc_orkmale_04b_slick"
    }
    karma: 80
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 26
    y: 0
    z: -50
  }
  orientation: ORIENTATION_W
  GeneralTags: "isFight7"
  displayName: "Fight8"
  idRef {
    id: "523fa1f1633461a02f003e1a"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Gangers/HumanMaleGanger"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 4
        quickness: 5
        strength: 2
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        hp: 0
        ap: 0
        armor: 3
        morale: 24
        discipline: 0
        awareness: 24
        perception: 0
        authority: 0
        protect_tether_range: 5
        move_speed: 0
        is_fearless: 1
      }
      skills {
        ranged_combat: 4
        close_combat: 0
        throwing_weapons: 3
        dodge: 3
      }
      specializations {
        shotgun: 3
        edged: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeBoss
      attackRandom: AttackStyle_AllEqual
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "Sh 2 Mossberg CMDT"
    }
    equipment {
      prefab_name: "Berlin_Tb 1 Knife"
    }
    team_id: "Civilians"
    char_name: "Gang Leader"
    GeneralTags: "isFight7"
    enabled_at_start: true
    pc_spawn_number: -1
    portrait {
      filename: "pc_humanmale_05a_dreads"
    }
    karma: 73
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 26
    y: 0
    z: -49
  }
  orientation: ORIENTATION_W
  GeneralTags: "isFight8"
  displayName: "Fight9"
  idRef {
    id: "523fa2e9633461a02f003e1b"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Gangers/TrollMaleGanger_Halloweener"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 5
        quickness: 5
        strength: 3
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        hp: 0
        ap: 0
        armor: 2
        morale: 24
        discipline: 0
        awareness: 24
        perception: 0
        authority: 0
        protect_tether_range: 5
        move_speed: 0
        is_fearless: 1
      }
      skills {
        ranged_combat: 4
        close_combat: 2
        throwing_weapons: 2
        dodge: 2
      }
      specializations {
        rifle: 0
        smg: 3
        unarmed: 2
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeBoss
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "DeckerStreet"
    }
    equipment {
      prefab_name: "Berlin_Grenade 1 (Frag)"
    }
    equipment {
      prefab_name: "Berlin_Fist 1 Spiked Fist"
    }
    equipment {
      prefab_name: "SMG 2 Ingram Smartgun"
    }
    team_id: "Civilians"
    char_name: "Troll Decker"
    GeneralTags: "isFight8"
    enabled_at_start: true
    pc_spawn_number: -1
    portrait {
      filename: "pc_trollmale_06_strategist"
    }
    karma: 83
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 26
    y: 0
    z: -41
  }
  orientation: ORIENTATION_W
  GeneralTags: "isKing"
  displayName: "The King"
  idRef {
    id: "524257dd633461981600491d"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Core/OrkMale"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 6
        quickness: 4
        strength: 4
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        hp: 0
        ap: 1
        armor: 4
        morale: 24
        discipline: 0
        awareness: 24
        perception: 0
        authority: 0
        protect_tether_range: 5
        move_speed: 0
        is_fearless: 1
      }
      skills {
        ranged_combat: 4
        close_combat: 4
        dodge: 2
      }
      specializations {
        pistol: 3
        unarmed: 4
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeBoss
      attackRandom: AttackStyle_BestOnly
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "RiggerGolden"
    }
    equipment {
      prefab_name: "Pi 2 Browning Max-Power"
    }
    equipment {
      prefab_name: "Berlin_Fist 1 Spiked Fist"
    }
    team_id: "Civilians"
    char_name: "The King"
    GeneralTags: "isKing"
    enabled_at_start: true
    pc_spawn_number: -1
    portrait {
      filename: "da-king"
    }
    portrait_code_override: "s6h2c8"
    karma: 100
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 26
    y: 0
    z: -48
  }
  orientation: ORIENTATION_W
  GeneralTags: "isFight9"
  GeneralTags: "isRealMage"
  displayName: "Fight10R"
  idRef {
    id: "524397a56334617c1c0016f8"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Core/ElfMale"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 4
        quickness: 2
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 4
        essence: 0
        magic: 5
        hp: 0
        ap: 0
        armor: 3
        force: 0
        morale: 0
        discipline: 0
        awareness: 24
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        is_fearless: 1
      }
      skills {
        ranged_combat: 3
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 4
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 3
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 1
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeBoss
      attackRandom: AttackStyle_AllEqual
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "Spell Manabolt 1"
    }
    equipment {
      prefab_name: "Player_MageRedRidingHood"
    }
    equipment {
      prefab_name: "Spell Powerbolt 2"
    }
    team_id: "Civilians"
    char_name: "Mage"
    GeneralTags: "isFight9"
    GeneralTags: "isRealMage"
    enabled_at_start: true
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "backer_elfmale_rthomasallwin"
    }
    karma: 62
    hiring_cost_override: 50
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 26
    y: 0
    z: -44
  }
  orientation: ORIENTATION_W
  GeneralTags: "isFight9"
  GeneralTags: "isClone"
  displayName: "Fight10F1"
  idRef {
    id: "524398c16334617c1c0016fa"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Core/ElfMale"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 4
        quickness: 2
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 4
        essence: 0
        magic: 5
        hp: 0
        ap: 0
        armor: 2
        force: 0
        morale: 0
        discipline: 0
        awareness: 24
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        is_fearless: 1
      }
      skills {
        ranged_combat: 3
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 4
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 3
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 1
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeBoss
      attackRandom: AttackStyle_BestOnly
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "Player_MageRedRidingHood"
    }
    equipment {
      prefab_name: "Berlin_Spell Powerbolt 1"
    }
    team_id: "Civilians"
    char_name: "Mage"
    GeneralTags: "isFight9"
    GeneralTags: "isClone"
    enabled_at_start: true
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "backer_elfmale_rthomasallwin"
    }
    karma: 62
    hiring_cost_override: 50
    has_fist: false
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 26
    y: 0
    z: -45
  }
  orientation: ORIENTATION_W
  GeneralTags: "isFight9"
  GeneralTags: "isClone"
  displayName: "Fight10F3"
  idRef {
    id: "524399176334617c1c0016fb"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Core/ElfMale"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 4
        quickness: 2
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 4
        essence: 0
        magic: 5
        hp: 0
        ap: 0
        armor: 3
        force: 0
        morale: 0
        discipline: 0
        awareness: 24
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        is_fearless: 1
      }
      skills {
        ranged_combat: 3
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 4
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 3
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 1
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeBoss
      attackRandom: AttackStyle_BestOnly
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "Player_MageRedRidingHood"
    }
    equipment {
      prefab_name: "Berlin_Spell Powerbolt 1"
    }
    team_id: "Civilians"
    char_name: "Mage"
    GeneralTags: "isFight9"
    GeneralTags: "isClone"
    enabled_at_start: true
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "backer_elfmale_rthomasallwin"
    }
    karma: 62
    hiring_cost_override: 50
    has_fist: false
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 25
    y: 0
    z: -45
  }
  orientation: ORIENTATION_W
  GeneralTags: "isFight9"
  GeneralTags: "isClone"
  displayName: "Fight10F2"
  idRef {
    id: "524399196334617c1c0016fc"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Core/ElfMale"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 4
        quickness: 2
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 4
        essence: 0
        magic: 5
        hp: 0
        ap: 0
        armor: 2
        force: 0
        morale: 0
        discipline: 0
        awareness: 24
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        is_fearless: 1
      }
      skills {
        ranged_combat: 3
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 4
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 3
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 1
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeBoss
      attackRandom: AttackStyle_BestOnly
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "Player_MageRedRidingHood"
    }
    equipment {
      prefab_name: "Berlin_Spell Powerbolt 1"
    }
    team_id: "Civilians"
    char_name: "Mage"
    GeneralTags: "isFight9"
    GeneralTags: "isClone"
    enabled_at_start: true
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "backer_elfmale_rthomasallwin"
    }
    karma: 62
    hiring_cost_override: 50
    has_fist: false
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 25
    y: 0
    z: -44
  }
  orientation: ORIENTATION_W
  GeneralTags: "isFight9"
  GeneralTags: "isClone"
  displayName: "Fight10F4"
  idRef {
    id: "5243991b6334617c1c0016fd"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Core/ElfMale"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 4
        quickness: 2
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 4
        essence: 0
        magic: 5
        hp: 0
        ap: 0
        armor: 2
        force: 0
        morale: 0
        discipline: 0
        awareness: 24
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        is_fearless: 1
      }
      skills {
        ranged_combat: 3
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 4
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 3
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 1
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeBoss
      attackRandom: AttackStyle_BestOnly
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "Player_MageRedRidingHood"
    }
    equipment {
      prefab_name: "Berlin_Spell Powerbolt 1"
    }
    team_id: "Civilians"
    char_name: "Mage"
    GeneralTags: "isFight9"
    GeneralTags: "isClone"
    enabled_at_start: true
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "backer_elfmale_rthomasallwin"
    }
    karma: 62
    hiring_cost_override: 50
    has_fist: false
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 32.5
    y: 0
    z: -10.400002
  }
  orientation: ORIENTATION_N
  idRef {
    id: "52e70b13373361500e006566"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Homeless/HumanFemaleHomelessPoncho"
    character_mod {
      archetypeName: "Non-Combatant"
    }
    team_id: "Civilians"
    char_name: "New Actor"
    pc_spawn_number: -1
    is_prop_character: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 30.900002
    y: 0
    z: -9
  }
  orientation: ORIENTATION_W
  idRef {
    id: "52e70b13373361500e006568"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Homeless/HumanFemaleHomelessPoncho"
    character_mod {
      archetypeName: "Non-Combatant"
    }
    team_id: "Civilians"
    char_name: "New Actor"
    pc_spawn_number: -1
    is_prop_character: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 25.800003
    y: 0
    z: -24.1
  }
  orientation: ORIENTATION_E
  idRef {
    id: "52e70b13373361500e00659a"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Homeless/DwarfMaleHomelessJacket"
    character_mod {
      archetypeName: "Non-Combatant"
    }
    team_id: "Civilians"
    char_name: "New Actor"
    pc_spawn_number: -1
    is_prop_character: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 25.7
    y: 0
    z: -6.6000013
  }
  orientation: ORIENTATION_W
  idRef {
    id: "52e70c23373361500e0065f6"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Gangers/OrkMaleGanger_Halloweener"
    character_mod {
      archetypeName: "Non-Combatant"
    }
    team_id: "Civilians"
    char_name: "New Actor"
    pc_spawn_number: -1
    is_prop_character: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 15.700001
    y: 0
    z: -14.600001
  }
  orientation: ORIENTATION_S
  idRef {
    id: "52e70c36373361500e0065f7"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Gangers/HumanMaleGanger_Halloweener"
    character_mod {
      archetypeName: "Non-Combatant"
    }
    team_id: "Civilians"
    char_name: "New Actor"
    pc_spawn_number: -1
    is_prop_character: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 26.800003
    y: 0
    z: -24
  }
  orientation: ORIENTATION_E
  idRef {
    id: "52e70c45373361500e0065f8"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Homeless/HumanMaleHomelessBackpack"
    character_mod {
      archetypeName: "Non-Combatant"
    }
    team_id: "Civilians"
    char_name: "New Actor"
    pc_spawn_number: -1
    is_prop_character: true
  }
}
characters {
  name: "system_spawner_playerSpawner"
  gridPoint {
    x: 20
    y: 0
    z: -23
  }
  orientation: ORIENTATION_E
  displayName: "P1"
  idRef {
    id: "5b56af1c616131f42200056c"
  }
  lod: 0
  character_instance {
    character_mod {
      archetypeName: "Player"
    }
    team_id: "Shadowrunners"
    char_name: "New Actor"
    enabled_at_start: true
    pc_spawn_number: 1
  }
}
characters {
  name: "system_spawner_playerSpawner"
  gridPoint {
    x: 19
    y: 0
    z: -22
  }
  orientation: ORIENTATION_E
  displayName: "P2"
  idRef {
    id: "5b56af30616131f42200056d"
  }
  lod: 0
  character_instance {
    character_mod {
      archetypeName: "Player"
    }
    team_id: "Shadowrunners"
    char_name: "New Actor"
    enabled_at_start: true
    pc_spawn_number: 2
  }
}
characters {
  name: "system_spawner_playerSpawner"
  gridPoint {
    x: 18
    y: 0
    z: -21
  }
  orientation: ORIENTATION_S
  displayName: "P3"
  idRef {
    id: "5b56af38616131f42200056e"
  }
  lod: 0
  character_instance {
    character_mod {
      archetypeName: "Player"
    }
    team_id: "Shadowrunners"
    char_name: "New Actor"
    enabled_at_start: true
    pc_spawn_number: 3
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "PrizeMoney"
    typeName: "int"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "KingFight"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "Lost"
    typeName: "bool"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "XP"
    typeName: "int"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "GainedKarma"
    typeName: "int"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "Karma"
    typeName: "int"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "Clones"
    typeName: "int"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "Scatter"
    typeName: "int"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "MageAlive"
    typeName: "bool"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "Difficulty"
    typeName: "int"
  }
}
mapEvents: "ReceiveReward"
mapEvents: "KarmaCheck"
mapEvents: "CloneSpawn"
mapEvents: "BOMBCOUNT"
mapEvents: "MageFightDeath"
mapEvents: "SpawnObs"
mapEvents: "eSpawnFighter"
mapEvents: "eEnableFighter"
mapEvents: "eInititive"
mapEvents: "eModifyCover"
mapEvents: "eArmClones"
mapEvents: "LeaveArena"
goals {
  name: "Survive The Arena"
  type: GoalType_Primary
  status: GoalStatus_Hidden
  description: "It\'s harder to figure out what happened, when you\'re dead."
}
goals {
  name: "Survive"
  type: GoalType_Primary
  status: GoalStatus_Hidden
  description: "It\'s harder to figure out what happened, when you\'re dead."
}
worldMapLocation {
  filename: ""
  location {
    x: 0
    y: 0
  }
}
mapName: "OT_Arena"
parentStory: ""
scene_title: "Arena"
scene_subtitle: ""
scene_synopsis: ""
scene_image: "TheArena"
scene_continue_button_skip: true
scene_restore_runner_health: false
directional_light_dir {
  x: -0.5
  y: -1
  z: -0.75
}
directional_light_color {
  r: 0.50196081
  g: 0.50196081
  b: 0.50196081
}
ambient_light_color {
  r: 0.50196081
  g: 0.50196081
  b: 0.50196081
}
allow_drawn_weapons: false
team_affiliations {
  team_name: "Shadowrunners"
  affiliation: 0
  affiliation: 1
  affiliation: 1
  affiliation: 0
}
team_affiliations {
  team_name: "Gangers"
  affiliation: 1
  affiliation: 0
  affiliation: 1
  affiliation: 0
}
team_affiliations {
  team_name: "LoneStar"
  affiliation: 1
  affiliation: 1
  affiliation: 0
  affiliation: 0
}
team_affiliations {
  team_name: "Civilians"
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
}
scene_dimensions {
  dimension_name: "Default"
}
character_roster {
}
show_hiring_screen_on_scene_load: false
scene_hiring_prerequisites {
  prereq_description: ""
  prereq_conditions {
  }
}
hiring_slot_count: 0
hiring_minimum_karma: 0
hiring_maximum_karma: 0
hire_from_content_pack: "518d7672643431b03f0041aa"
roster_overrides {
}
use_hiring_cost_warning: false
hiring_average_cost: 0
override_hiring_average_cost: false
show_equip_screen_on_scene_load: false
is_persistant: false
is_persistant_has_value: false
can_move_outside_camera_regions: false
can_start_before_triggers: false
can_use_team_advancement: false
